// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Solita2023Assignment.Data;

#nullable disable

namespace Solita2023Assignment.Migrations
{
    [DbContext(typeof(Solita2023AssignmentContext))]
    partial class Solita2023AssignmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("Solita2023Assignment.Models.Journey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartureStationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("DistanceMeters")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DurationSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReturnStationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReturnTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartureStationId");

                    b.HasIndex("ReturnStationId");

                    b.ToTable("Journey");
                });

            modelBuilder.Entity("Solita2023Assignment.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressFI")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressSV")
                        .HasColumnType("TEXT");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CityFI")
                        .HasColumnType("TEXT");

                    b.Property<string>("CitySV")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameFI")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameSV")
                        .HasColumnType("TEXT");

                    b.Property<string>("Operator")
                        .HasColumnType("TEXT");

                    b.Property<int>("PublicStationId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("XCoordinate")
                        .HasColumnType("REAL");

                    b.Property<float>("YCoordinate")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Station");
                });

            modelBuilder.Entity("Solita2023Assignment.Models.Journey", b =>
                {
                    b.HasOne("Solita2023Assignment.Models.Station", "DepartureStation")
                        .WithMany()
                        .HasForeignKey("DepartureStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Solita2023Assignment.Models.Station", "ReturnStation")
                        .WithMany()
                        .HasForeignKey("ReturnStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartureStation");

                    b.Navigation("ReturnStation");
                });
#pragma warning restore 612, 618
        }
    }
}
